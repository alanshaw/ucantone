// Code generated by github.com/whyrusleeping/cbor-gen. DO NOT EDIT.

package datamodel

import (
	"fmt"
	"io"
	"math"
	"sort"

	datamodel "github.com/alanshaw/ucantone/ipld/datamodel"
	cid "github.com/ipfs/go-cid"
	cbg "github.com/whyrusleeping/cbor-gen"
	xerrors "golang.org/x/xerrors"
)

var _ = xerrors.Errorf
var _ = cid.Undef
var _ = math.E
var _ = sort.Sort

func (t *PolicyModel) MarshalCBOR(w io.Writer) error {
	cw := cbg.NewCborWriter(w)

	// t.Statements ([]typegen.Deferred) (slice)
	if len(t.Statements) > 8192 {
		return xerrors.Errorf("Slice value in field t.Statements was too long")
	}

	if err := cw.WriteMajorTypeHeader(cbg.MajArray, uint64(len(t.Statements))); err != nil {
		return err
	}
	for _, v := range t.Statements {
		if err := v.MarshalCBOR(cw); err != nil {
			return err
		}

	}
	return nil
}

func (t *PolicyModel) UnmarshalCBOR(r io.Reader) (err error) {
	*t = PolicyModel{}

	cr := cbg.NewCborReader(r)
	var maj byte
	var extra uint64
	_ = maj
	_ = extra
	// t.Statements ([]typegen.Deferred) (slice)

	maj, extra, err = cr.ReadHeader()
	if err != nil {
		return err
	}

	if extra > 8192 {
		return fmt.Errorf("t.Statements: array too large (%d)", extra)
	}

	if maj != cbg.MajArray {
		return fmt.Errorf("expected cbor array")
	}

	if extra > 0 {
		t.Statements = make([]cbg.Deferred, extra)
	}

	for i := 0; i < int(extra); i++ {
		{
			var maj byte
			var extra uint64
			var err error
			_ = maj
			_ = extra
			_ = err

			{

				if err := t.Statements[i].UnmarshalCBOR(cr); err != nil {
					return xerrors.Errorf("failed to read deferred field: %w", err)
				}
			}

		}
	}
	return nil
}

var lengthBufStatementModel = []byte{131}

func (t *StatementModel) MarshalCBOR(w io.Writer) error {
	if t == nil {
		_, err := w.Write(cbg.CborNull)
		return err
	}

	cw := cbg.NewCborWriter(w)

	if _, err := cw.Write(lengthBufStatementModel); err != nil {
		return err
	}

	// t.Op (string) (string)
	if len(t.Op) > 8192 {
		return xerrors.Errorf("Value in field t.Op was too long")
	}

	if err := cw.WriteMajorTypeHeader(cbg.MajTextString, uint64(len(t.Op))); err != nil {
		return err
	}
	if _, err := cw.WriteString(string(t.Op)); err != nil {
		return err
	}

	// t.Arg0 (typegen.Deferred) (struct)
	if err := t.Arg0.MarshalCBOR(cw); err != nil {
		return err
	}

	// t.Arg1 (typegen.Deferred) (struct)
	if err := t.Arg1.MarshalCBOR(cw); err != nil {
		return err
	}
	return nil
}

func (t *StatementModel) UnmarshalCBOR(r io.Reader) (err error) {
	*t = StatementModel{}

	cr := cbg.NewCborReader(r)

	maj, extra, err := cr.ReadHeader()
	if err != nil {
		return err
	}
	defer func() {
		if err == io.EOF {
			err = io.ErrUnexpectedEOF
		}
	}()

	if maj != cbg.MajArray {
		return fmt.Errorf("cbor input should be of type array")
	}

	if extra > 3 {
		return fmt.Errorf("cbor input has too many fields %d > 3", extra)
	}

	if extra < 1 {
		return fmt.Errorf("cbor input has too few fields %d < 1", extra)
	}

	fieldCount := extra

	// t.Op (string) (string)

	{
		sval, err := cbg.ReadStringWithMax(cr, 8192)
		if err != nil {
			return err
		}

		t.Op = string(sval)
	}
	// t.Arg0 (typegen.Deferred) (struct)
	if fieldCount < 2 {
		return nil
	}

	{

		if err := t.Arg0.UnmarshalCBOR(cr); err != nil {
			return xerrors.Errorf("failed to read deferred field: %w", err)
		}
	}
	// t.Arg1 (typegen.Deferred) (struct)
	if fieldCount < 3 {
		return nil
	}

	{

		if err := t.Arg1.UnmarshalCBOR(cr); err != nil {
			return xerrors.Errorf("failed to read deferred field: %w", err)
		}
	}
	return nil
}

var lengthBufComparisonModel = []byte{131}

func (t *ComparisonModel) MarshalCBOR(w io.Writer) error {
	if t == nil {
		_, err := w.Write(cbg.CborNull)
		return err
	}

	cw := cbg.NewCborWriter(w)

	if _, err := cw.Write(lengthBufComparisonModel); err != nil {
		return err
	}

	// t.Op (string) (string)
	if len(t.Op) > 8192 {
		return xerrors.Errorf("Value in field t.Op was too long")
	}

	if err := cw.WriteMajorTypeHeader(cbg.MajTextString, uint64(len(t.Op))); err != nil {
		return err
	}
	if _, err := cw.WriteString(string(t.Op)); err != nil {
		return err
	}

	// t.Selector (string) (string)
	if len(t.Selector) > 8192 {
		return xerrors.Errorf("Value in field t.Selector was too long")
	}

	if err := cw.WriteMajorTypeHeader(cbg.MajTextString, uint64(len(t.Selector))); err != nil {
		return err
	}
	if _, err := cw.WriteString(string(t.Selector)); err != nil {
		return err
	}

	// t.Value (datamodel.Any) (struct)
	if err := t.Value.MarshalCBOR(cw); err != nil {
		return err
	}
	return nil
}

func (t *ComparisonModel) UnmarshalCBOR(r io.Reader) (err error) {
	*t = ComparisonModel{}

	cr := cbg.NewCborReader(r)

	maj, extra, err := cr.ReadHeader()
	if err != nil {
		return err
	}
	defer func() {
		if err == io.EOF {
			err = io.ErrUnexpectedEOF
		}
	}()

	if maj != cbg.MajArray {
		return fmt.Errorf("cbor input should be of type array")
	}

	if extra != 3 {
		return fmt.Errorf("cbor input had wrong number of fields")
	}

	// t.Op (string) (string)

	{
		sval, err := cbg.ReadStringWithMax(cr, 8192)
		if err != nil {
			return err
		}

		t.Op = string(sval)
	}
	// t.Selector (string) (string)

	{
		sval, err := cbg.ReadStringWithMax(cr, 8192)
		if err != nil {
			return err
		}

		t.Selector = string(sval)
	}
	// t.Value (datamodel.Any) (struct)

	{

		b, err := cr.ReadByte()
		if err != nil {
			return err
		}
		if b != cbg.CborNull[0] {
			if err := cr.UnreadByte(); err != nil {
				return err
			}
			t.Value = new(datamodel.Any)
			if err := t.Value.UnmarshalCBOR(cr); err != nil {
				return xerrors.Errorf("unmarshaling t.Value pointer: %w", err)
			}
		}

	}
	return nil
}

var lengthBufWildcardModel = []byte{131}

func (t *WildcardModel) MarshalCBOR(w io.Writer) error {
	if t == nil {
		_, err := w.Write(cbg.CborNull)
		return err
	}

	cw := cbg.NewCborWriter(w)

	if _, err := cw.Write(lengthBufWildcardModel); err != nil {
		return err
	}

	// t.Op (string) (string)
	if len(t.Op) > 8192 {
		return xerrors.Errorf("Value in field t.Op was too long")
	}

	if err := cw.WriteMajorTypeHeader(cbg.MajTextString, uint64(len(t.Op))); err != nil {
		return err
	}
	if _, err := cw.WriteString(string(t.Op)); err != nil {
		return err
	}

	// t.Selector (string) (string)
	if len(t.Selector) > 8192 {
		return xerrors.Errorf("Value in field t.Selector was too long")
	}

	if err := cw.WriteMajorTypeHeader(cbg.MajTextString, uint64(len(t.Selector))); err != nil {
		return err
	}
	if _, err := cw.WriteString(string(t.Selector)); err != nil {
		return err
	}

	// t.Pattern (string) (string)
	if len(t.Pattern) > 8192 {
		return xerrors.Errorf("Value in field t.Pattern was too long")
	}

	if err := cw.WriteMajorTypeHeader(cbg.MajTextString, uint64(len(t.Pattern))); err != nil {
		return err
	}
	if _, err := cw.WriteString(string(t.Pattern)); err != nil {
		return err
	}
	return nil
}

func (t *WildcardModel) UnmarshalCBOR(r io.Reader) (err error) {
	*t = WildcardModel{}

	cr := cbg.NewCborReader(r)

	maj, extra, err := cr.ReadHeader()
	if err != nil {
		return err
	}
	defer func() {
		if err == io.EOF {
			err = io.ErrUnexpectedEOF
		}
	}()

	if maj != cbg.MajArray {
		return fmt.Errorf("cbor input should be of type array")
	}

	if extra != 3 {
		return fmt.Errorf("cbor input had wrong number of fields")
	}

	// t.Op (string) (string)

	{
		sval, err := cbg.ReadStringWithMax(cr, 8192)
		if err != nil {
			return err
		}

		t.Op = string(sval)
	}
	// t.Selector (string) (string)

	{
		sval, err := cbg.ReadStringWithMax(cr, 8192)
		if err != nil {
			return err
		}

		t.Selector = string(sval)
	}
	// t.Pattern (string) (string)

	{
		sval, err := cbg.ReadStringWithMax(cr, 8192)
		if err != nil {
			return err
		}

		t.Pattern = string(sval)
	}
	return nil
}

var lengthBufConjunctionModel = []byte{130}

func (t *ConjunctionModel) MarshalCBOR(w io.Writer) error {
	if t == nil {
		_, err := w.Write(cbg.CborNull)
		return err
	}

	cw := cbg.NewCborWriter(w)

	if _, err := cw.Write(lengthBufConjunctionModel); err != nil {
		return err
	}

	// t.Op (string) (string)
	if len(t.Op) > 8192 {
		return xerrors.Errorf("Value in field t.Op was too long")
	}

	if err := cw.WriteMajorTypeHeader(cbg.MajTextString, uint64(len(t.Op))); err != nil {
		return err
	}
	if _, err := cw.WriteString(string(t.Op)); err != nil {
		return err
	}

	// t.Statements (typegen.Deferred) (struct)
	if err := t.Statements.MarshalCBOR(cw); err != nil {
		return err
	}
	return nil
}

func (t *ConjunctionModel) UnmarshalCBOR(r io.Reader) (err error) {
	*t = ConjunctionModel{}

	cr := cbg.NewCborReader(r)

	maj, extra, err := cr.ReadHeader()
	if err != nil {
		return err
	}
	defer func() {
		if err == io.EOF {
			err = io.ErrUnexpectedEOF
		}
	}()

	if maj != cbg.MajArray {
		return fmt.Errorf("cbor input should be of type array")
	}

	if extra != 2 {
		return fmt.Errorf("cbor input had wrong number of fields")
	}

	// t.Op (string) (string)

	{
		sval, err := cbg.ReadStringWithMax(cr, 8192)
		if err != nil {
			return err
		}

		t.Op = string(sval)
	}
	// t.Statements (typegen.Deferred) (struct)

	{

		if err := t.Statements.UnmarshalCBOR(cr); err != nil {
			return xerrors.Errorf("failed to read deferred field: %w", err)
		}
	}
	return nil
}

var lengthBufDisjunctionModel = []byte{130}

func (t *DisjunctionModel) MarshalCBOR(w io.Writer) error {
	if t == nil {
		_, err := w.Write(cbg.CborNull)
		return err
	}

	cw := cbg.NewCborWriter(w)

	if _, err := cw.Write(lengthBufDisjunctionModel); err != nil {
		return err
	}

	// t.Op (string) (string)
	if len(t.Op) > 8192 {
		return xerrors.Errorf("Value in field t.Op was too long")
	}

	if err := cw.WriteMajorTypeHeader(cbg.MajTextString, uint64(len(t.Op))); err != nil {
		return err
	}
	if _, err := cw.WriteString(string(t.Op)); err != nil {
		return err
	}

	// t.Statements (typegen.Deferred) (struct)
	if err := t.Statements.MarshalCBOR(cw); err != nil {
		return err
	}
	return nil
}

func (t *DisjunctionModel) UnmarshalCBOR(r io.Reader) (err error) {
	*t = DisjunctionModel{}

	cr := cbg.NewCborReader(r)

	maj, extra, err := cr.ReadHeader()
	if err != nil {
		return err
	}
	defer func() {
		if err == io.EOF {
			err = io.ErrUnexpectedEOF
		}
	}()

	if maj != cbg.MajArray {
		return fmt.Errorf("cbor input should be of type array")
	}

	if extra != 2 {
		return fmt.Errorf("cbor input had wrong number of fields")
	}

	// t.Op (string) (string)

	{
		sval, err := cbg.ReadStringWithMax(cr, 8192)
		if err != nil {
			return err
		}

		t.Op = string(sval)
	}
	// t.Statements (typegen.Deferred) (struct)

	{

		if err := t.Statements.UnmarshalCBOR(cr); err != nil {
			return xerrors.Errorf("failed to read deferred field: %w", err)
		}
	}
	return nil
}

var lengthBufNegationModel = []byte{130}

func (t *NegationModel) MarshalCBOR(w io.Writer) error {
	if t == nil {
		_, err := w.Write(cbg.CborNull)
		return err
	}

	cw := cbg.NewCborWriter(w)

	if _, err := cw.Write(lengthBufNegationModel); err != nil {
		return err
	}

	// t.Op (string) (string)
	if len(t.Op) > 8192 {
		return xerrors.Errorf("Value in field t.Op was too long")
	}

	if err := cw.WriteMajorTypeHeader(cbg.MajTextString, uint64(len(t.Op))); err != nil {
		return err
	}
	if _, err := cw.WriteString(string(t.Op)); err != nil {
		return err
	}

	// t.Statement (typegen.Deferred) (struct)
	if err := t.Statement.MarshalCBOR(cw); err != nil {
		return err
	}
	return nil
}

func (t *NegationModel) UnmarshalCBOR(r io.Reader) (err error) {
	*t = NegationModel{}

	cr := cbg.NewCborReader(r)

	maj, extra, err := cr.ReadHeader()
	if err != nil {
		return err
	}
	defer func() {
		if err == io.EOF {
			err = io.ErrUnexpectedEOF
		}
	}()

	if maj != cbg.MajArray {
		return fmt.Errorf("cbor input should be of type array")
	}

	if extra != 2 {
		return fmt.Errorf("cbor input had wrong number of fields")
	}

	// t.Op (string) (string)

	{
		sval, err := cbg.ReadStringWithMax(cr, 8192)
		if err != nil {
			return err
		}

		t.Op = string(sval)
	}
	// t.Statement (typegen.Deferred) (struct)

	{

		if err := t.Statement.UnmarshalCBOR(cr); err != nil {
			return xerrors.Errorf("failed to read deferred field: %w", err)
		}
	}
	return nil
}

var lengthBufQuantificationModel = []byte{131}

func (t *QuantificationModel) MarshalCBOR(w io.Writer) error {
	if t == nil {
		_, err := w.Write(cbg.CborNull)
		return err
	}

	cw := cbg.NewCborWriter(w)

	if _, err := cw.Write(lengthBufQuantificationModel); err != nil {
		return err
	}

	// t.Op (string) (string)
	if len(t.Op) > 8192 {
		return xerrors.Errorf("Value in field t.Op was too long")
	}

	if err := cw.WriteMajorTypeHeader(cbg.MajTextString, uint64(len(t.Op))); err != nil {
		return err
	}
	if _, err := cw.WriteString(string(t.Op)); err != nil {
		return err
	}

	// t.Selector (string) (string)
	if len(t.Selector) > 8192 {
		return xerrors.Errorf("Value in field t.Selector was too long")
	}

	if err := cw.WriteMajorTypeHeader(cbg.MajTextString, uint64(len(t.Selector))); err != nil {
		return err
	}
	if _, err := cw.WriteString(string(t.Selector)); err != nil {
		return err
	}

	// t.Statements (typegen.Deferred) (struct)
	if err := t.Statements.MarshalCBOR(cw); err != nil {
		return err
	}
	return nil
}

func (t *QuantificationModel) UnmarshalCBOR(r io.Reader) (err error) {
	*t = QuantificationModel{}

	cr := cbg.NewCborReader(r)

	maj, extra, err := cr.ReadHeader()
	if err != nil {
		return err
	}
	defer func() {
		if err == io.EOF {
			err = io.ErrUnexpectedEOF
		}
	}()

	if maj != cbg.MajArray {
		return fmt.Errorf("cbor input should be of type array")
	}

	if extra != 3 {
		return fmt.Errorf("cbor input had wrong number of fields")
	}

	// t.Op (string) (string)

	{
		sval, err := cbg.ReadStringWithMax(cr, 8192)
		if err != nil {
			return err
		}

		t.Op = string(sval)
	}
	// t.Selector (string) (string)

	{
		sval, err := cbg.ReadStringWithMax(cr, 8192)
		if err != nil {
			return err
		}

		t.Selector = string(sval)
	}
	// t.Statements (typegen.Deferred) (struct)

	{

		if err := t.Statements.UnmarshalCBOR(cr); err != nil {
			return xerrors.Errorf("failed to read deferred field: %w", err)
		}
	}
	return nil
}
